/*
 * This macro can be copy/pasted in the custom macro field of the Batch Process Hyperstack (macro).
 * You can also try this macro in Fiji's script editor, on an image already opened. Just comment the line "setBatchMode(true)" with // to make sure the images is displayed.
 * 
 * It demonstrates the simplest possibility, which is to process the active image, which will be the latest image generated by the plugin for a given iteration.
 * If both the hyperstack and the projection are shown, the projection will be processed by the macro below, since it is displayed after the stack.
 * 
 * The macro applies a simple example: edge detection, and saves the image of the edges to the "default" directory (indicated in the Batch Process Hyperstack plugin's GUI)
 * The path of the saved images is reported to the log window. Clicking the imagepath in the log window will directly open the image in Fiji. 
 *
 * NOTE : When open via the menu ACQUIFER > Examples, this script file opens as a temporary file.
 * Changes to this file will thus NOT be saved, in particular the next time you open this example via the menu, the original example will be shown.
 * Use File > Save As... to save a copy of this example, and keep your modifications.
 * You can also find all the examples on the following GitHub repository: https://github.com/acquifer/Fiji-examples
 */
 
// Activate batch mode (optional)
// the batch mode is usually faster as it does not display intermediate images
// To deactivate it add // before the line to comment it
setBatchMode(true);

originalTitle = getTitle(); // get the original image title before we duplicate

// IMPORTANT: DUPLICATE IMAGE
// Many macro-commands do not work out of the box on VirtualStacks
// Therefore we duplicate the image (or stack) so that it is fully in memory
// The image title of the duplicated image will be slightly different than the original title
// but it does not matter, the active image is now the duplicated image
run("Duplicate...", "duplicate");

// CUSTOM COMMANDS
// Here edge detection for instance
// Applied on every slice of a stack here
run("Find Edges", "stack");

// Save processed image to output directory indicated in the GUI
// The Batch Process hyperstack plugin creates this directory if not existing
outputDirectory = getDirectory("default");
filename = originalTitle + "_edges";
outPath = outputDirectory + filename;
saveAs("Tiff", outPath);

print("Saved: ");
print(outPath + ".tif" ); // The filepath on a dedicated line to make it clickable

// Close image/free memory in batch mode
close();    // close only the active image (the duplicated one here)
close("*"); // or close all images