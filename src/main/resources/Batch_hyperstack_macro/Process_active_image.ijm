/*
 * This macro can be copy/pasted in the custom macro field of the Batch Process Hyperstack (macro).
 * In the plugin setting, untick "Use VirtualStack", otherwise the processing will be lost when browsing through the VirtualStack.
 * You can also try this macro in Fiji's script editor, on an image already opened. Just comment the line "setBatchMode(true)" with // to make sure the images is displayed.
 * 
 * It demonstrates the simplest possibility, which is to process the active image, which will be the latest image generated by the plugin for a given iteration.
 * If both the hyperstack and the projection are shown, the projection will be processed by the macro below, since it is displayed after the stack.
 * 
 * The macro applies a simple example: edge detection, and saves the image of the edges to the "default" directory (indicated in the Batch Process Hyperstack plugin's GUI)
 * The path of the saved images is reported to the log window. Clicking the imagepath in the log window will directly open the image in Fiji. 
 *
 * Use File > Save As... to save a copy of this example, and keep your modifications.
 * You can also find all the examples on the following GitHub repository: https://github.com/acquifer/acquifer-IJ-examples/tree/main/src/main/resources
 */
 
originalTitle = getTitle(); // get the original image title (just for saving)

// Smooth and edge detection
// Applied on every slice of the stack here
run("Mean...", "radius=3 stack");
run("Find Edges", "stack");

// Save processed image to output directory indicated in the GUI
// The Batch Process hyperstack plugin creates this directory if not existing
outputDirectory = getDirectory("default");
outPath = outputDirectory + originalTitle + "_edges";
saveAs("Tiff", outPath);

print("Saved (double-click line to open in Fiji):");
print(outPath + ".tif" ); // print the filepath on a dedicated line to make it clickable

// If selected "Dont show stack" then actually show the processed image
setBatchMode("show");

// Close image/free memory
print("Waiting 3 secs before closing images.");
wait(3000); // ms

// Use one of the 2 option
//close();    // close only the active image
close("*"); // or close all images